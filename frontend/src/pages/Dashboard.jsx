import React, {useEffect, useState} from 'react'; import axios from 'axios'; import {PieChart,Pie,Cell,Tooltip,LineChart,Line,CartesianGrid,XAxis,YAxis} from 'recharts';
const COLORS = ['#8884d8','#82ca9d','#ffc658','#ff7f50','#a4de6c'];
export default function Dashboard({onLogout, token}){
  const api = axios.create({ baseURL: import.meta.env.VITE_API_URL, headers: { Authorization: `Bearer ${token}` } });
  const [txns,setTxns]=useState([]);
  useEffect(()=>{ (async ()=>{ try{ const res = await api.get('/transactions'); setTxns(res.data); }catch(e){ console.error(e); } })(); },[]);
  const totalsByCategory = () => { const map = {}; txns.forEach(t=>{ map[t.category]=(map[t.category]||0)+t.amount; }); return Object.entries(map).map(([k,v])=>({name:k,value:Math.abs(v)})); };
  const trendData = () => { const m = {}; txns.forEach(t=>{ const k = new Date(t.date).toISOString().slice(0,10); m[k]=(m[k]||0)+t.amount; }); return Object.keys(m).slice(0,10).map(k=>({date:k,amount:m[k]})); };
  return (<div style={{padding:20,fontFamily:'Arial'}}><div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}><h1>Dashboard</h1><div><button onClick={onLogout}>Logout</button></div></div><div style={{display:'grid',gridTemplateColumns:'1fr 1fr 1fr',gap:16,marginTop:16}}><div style={{padding:16,background:'#fff',borderRadius:8}}><h4>Money In</h4><div style={{fontSize:20}}>₹{txns.filter(t=>t.type==='income').reduce((s,t)=>s+t.amount,0)}</div></div><div style={{padding:16,background:'#fff',borderRadius:8}}><h4>Money Out</h4><div style={{fontSize:20}}>₹{txns.filter(t=>t.type==='expense').reduce((s,t)=>s+t.amount,0)}</div></div><div style={{padding:16,background:'#fff',borderRadius:8}}><h4>Savings</h4><div style={{fontSize:20}}>₹{txns.reduce((s,t)=>s + (t.type==='income'?t.amount:-t.amount),0)}</div></div></div><div style={{display:'flex',gap:20,marginTop:24}}><div style={{flex:1,background:'#fff',padding:16,borderRadius:8}}><h3>Expenses by Category</h3><PieChart width={350} height={250}><Pie data={totalsByCategory()} dataKey="value" nameKey="name" cx="50%" cy="50%" outerRadius={80} label>{totalsByCategory().map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}</Pie><Tooltip /></PieChart></div><div style={{flex:1,background:'#fff',padding:16,borderRadius:8}}><h3>Spending Trend</h3><LineChart width={500} height={250} data={trendData()}><CartesianGrid strokeDasharray="3 3" /><XAxis dataKey="date" /><YAxis /><Tooltip /><Line type="monotone" dataKey="amount" stroke="#8884d8" /></LineChart></div></div></div>); }
